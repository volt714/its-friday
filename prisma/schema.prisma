generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model group {
  id        Int      @id @default(autoincrement())
  name      String
  order     Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  task      task[]
}

model task {
  id             Int              @id @default(autoincrement())
  title          String
  owner          String?
  status         task_status      @default(NOT_STARTED)
  dueDate        DateTime?
  dropdown       String?
  groupId        Int
  createdAt      DateTime         @default(now())
  updatedAt      DateTime
  ownerId        Int?
  assignedAt     DateTime?
  group          group            @relation(fields: [groupId], references: [id], onDelete: Cascade, map: "Task_groupId_fkey")
  user           user?            @relation(fields: [ownerId], references: [id], map: "Task_ownerId_fkey")
  taskassignment taskassignment[]
  taskmessage    taskmessage[]

  @@index([groupId], map: "Task_groupId_fkey")
  @@index([ownerId], map: "Task_ownerId_fkey")
}

model taskassignment {
  id        Int      @id @default(autoincrement())
  taskId    Int
  userId    Int
  level     Int      @default(0)
  createdAt DateTime @default(now())
  task      task     @relation(fields: [taskId], references: [id], onDelete: Cascade, map: "TaskAssignment_taskId_fkey")
  user      user     @relation(fields: [userId], references: [id], onDelete: Cascade, map: "TaskAssignment_userId_fkey")

  @@index([taskId], map: "TaskAssignment_taskId_fkey")
  @@index([userId], map: "TaskAssignment_userId_fkey")
}

model taskmessage {
  id        Int      @id @default(autoincrement())
  taskId    Int
  userId    Int
  body      String
  createdAt DateTime @default(now())
  task      task     @relation(fields: [taskId], references: [id], onDelete: Cascade, map: "TaskMessage_taskId_fkey")
  user      user     @relation(fields: [userId], references: [id], onDelete: Cascade, map: "TaskMessage_userId_fkey")

  @@index([taskId], map: "TaskMessage_taskId_fkey")
  @@index([userId], map: "TaskMessage_userId_fkey")
}

model user {
  id             Int              @id @default(autoincrement())
  name           String           @unique(map: "User_name_key")
  email          String?          @unique(map: "User_email_key")
  role           user_role        @default(USER)
  passwordHash   String
  task           task[]
  taskassignment taskassignment[]
  taskmessage    taskmessage[]
}

enum task_status {
  WORKING_ON_IT
  DONE
  NOT_STARTED
  STUCK
}

enum user_role {
  USER
  ADMIN
  DEVELOPER
}
